<project>
	<target name="init">
		<condition property="isUnix" else="false">
			<os family="unix"/>
		</condition>
	</target>
	<target name="git.revision" description="Store git revision in ${repository.version}" if="${isUnix}">
		<exec executable="git" outputproperty="git.revision" failifexecutionfails="false">
		    <arg value="log"/>
			<arg value="-1"/>
			<arg value="--pretty=format:%H"/>
		</exec>
	    <condition property="repository.version" value="${git.revision}" else="unknown">
	        <and>
	            <isset property="git.revision"/>
	            <length string="${git.revision}" trim="yes" length="0" when="greater"/>
	        </and>
	    </condition>
	</target>
	
	<target name="checkDirty" if="${isUnix}">
		<exec executable="git" resultproperty="git.wt.dirty" failifexecutionfails="false" failonerror="false">
			<arg value="diff"/>
			<arg value="--quiet"/>
		</exec>
		<condition property="repository.wt.dirty" value="${git.wt.dirty}" else="0">
			<isset property="git.wt.dirty"/>
		</condition>
		<exec executable="git" resultproperty="git.index.dirty" failifexecutionfails="false" failonerror="false">
			<arg value="diff"/>
			<arg value="--cached"/>
			<arg value="--quiet"/>
		</exec>
		<condition property="repository.index.dirty" value="${git.index.dirty}" else="0">
			<isset property="git.index.dirty"/>
		</condition>
		<condition property="repository.dirty" value="dirty" else="clean">
			<or>
				<equals arg1="${repository.wt.dirty}" arg2="1"/>
				<equals arg1="${repository.index.dirty}" arg2="1"/>
			</or>
		</condition>
	</target>
	
	<target name="getUsername" if="${isUnix}">
		<exec executable="git" outputproperty="git.user" failifexecutionfails="false">
			<arg value="config"/>
			<arg value="user.name"/>
		</exec>
		<condition property="repository.user" value="${git.user}" else="unknown">
			<isset property="git.user"/>
		</condition>
	</target>
	
	<target name="writeVersionFile" if="${isUnix}">
		<echo file="version.txt" append="false">build info: ${branch} ${repository.version} ${repository.dirty}
user: ${repository.user}
link to github commit page: https://github.com/mobilis/mobilis/commit/${repository.version}</echo>
	</target>
</project>